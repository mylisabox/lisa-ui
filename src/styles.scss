@charset "UTF-8";
/* You can add global styles to this file, and also import other style files */
@import "variables";
@import "../node_modules/bootstrap-sass/assets/stylesheets/bootstrap";

@media (min-width: 1200px) {
  .container {
    width: 95%;
  }
}

body {
  padding-top: 60px;
}

a {
  font-size: 16px;
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

h3 {
  color: $themeColor;
  margin: 0;
}

input {
  border: 1px solid grey;
}

input[type="search"] {
  transition: all 0.7s ease-out;
  padding: 5px 8px;
}

input[type="search"]:focus, input[type="text"]:focus {
  border: 1px solid $themeColor;
}

*:focus {
  outline: none
}

.hidden {
  display: none;
}

.glyphicon {
  top: 2px;
}

.boot-loading {
  position: fixed;
  text-align: center;
  width: 300px;
  height: 300px;
  top: 50%;
  left: 50%;
  color: $darkTextColor;
  margin-top: -150px;
  margin-left: -150px;
  font-weight: bold;
  font-size: 16pt;
}

.shadow-box {
  padding: 20px;
  -webkit-box-shadow: 0 0 10px #CCC;
  -moz-box-shadow: 0 0 10px #CCC;
  box-shadow: 0 0 10px #CCC;
}

.no-events {
  pointer-events: none;
}

.pointer {
  cursor: pointer;
}

.material-link {
  color: $themeColor;
  cursor: pointer;
  font-weight: bold;
  border: none;
  background: none;
}

.material-link:hover {
  text-decoration: none;
}

/*
==============================================
slide-left
==============================================
*/

.slide-left {
  animation-name: slide-left;
  -webkit-animation-name: slide-left;

  animation-duration: 1s;
  -webkit-animation-duration: 1s;

  animation-timing-function: ease-in-out;
  -webkit-animation-timing-function: ease-in-out;

  visibility: visible !important;
}

@keyframes slide-left {
  0% {
    transform: translateX(150%);
  }
  50% {
    transform: translateX(-8%);
  }
  65% {
    transform: translateX(4%);
  }
  80% {
    transform: translateX(-4%);
  }
  95% {
    transform: translateX(2%);
  }
  100% {
    transform: translateX(0%);
  }
}

/*
==============================================
slide-right
==============================================
*/

.slide-right {
  animation-name: slide-right;
  -webkit-animation-name: slide-right;

  animation-duration: 1s;
  -webkit-animation-duration: 1s;

  animation-timing-function: ease-in-out;
  -webkit-animation-timing-function: ease-in-out;

  visibility: visible !important;
}

@keyframes slide-right {
  0% {
    transform: translateX(-150%);
  }
  50% {
    transform: translateX(8%);
  }
  65% {
    transform: translateX(-4%);
  }
  80% {
    transform: translateX(4%);
  }
  95% {
    transform: translateX(-2%);
  }
  100% {
    transform: translateX(0%);
  }
}

/*
==============================================
flex stuff
==============================================
*/

/*Stack child items vertically*/
.vbox {
  display: flex;

  /*Align children vetically*/
  flex-direction: column;
  align-content: flex-start;
}

/*Stack child items horizontally*/
.hbox {
  display: flex;

  /*Align children horizontally*/
  flex-direction: row;
  align-content: flex-start;
}

/*Stretch item along parent's cross-axis Overrides any cross-* class of parent*/
.stretch-self {
  align-self: stretch;
}

/*Center item along parent's cross-axis. Overrides any cross-* class of parent*/
.center-self {
  align-self: center;
}

/*Stack child items to the main-axis start*/
.main-start {
  justify-content: flex-start;
}

/*Stack child items to the cross-axis start*/
.cross-start {
  align-items: flex-start;
  align-content: flex-start;
}

/*Stack child items to the main-axis center*/
.main-center {
  justify-content: center;
}

/*Stack child items to the cross-axis center*/
.cross-center {
  align-items: center;
  align-content: center;
}

/*Stack child items to the main-axis end.*/
.main-end {
  justify-content: flex-end;
}

/*Stack child items to the cross-axis end.*/
.cross-end {
  align-items: flex-end;
  align-content: flex-end;
}

/*Stretch child items along the cross-axis*/
.cross-stretch {
  align-items: stretch;
  align-content: stretch;
}


